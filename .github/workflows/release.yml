name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 60
    defaults:
      run:
        working-directory: rtx_innovations_electron
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build renderer
        run: npm run build

      - name: Generate icons
        run: npm run gen-icons

      - name: Package (Windows NSIS)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx electron-builder --win nsis --publish never

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: |
            rtx_innovations_electron/dist-builds/*.exe
            rtx_innovations_electron/dist-builds/*.blockmap
            rtx_innovations_electron/dist-builds/latest.yml
          if-no-files-found: error

  build-macos:
    runs-on: macos-latest
    timeout-minutes: 60
    defaults:
      run:
        working-directory: rtx_innovations_electron
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build renderer
        run: npm run build

      - name: Generate icons
        run: npm run gen-icons

      - name: Package (macOS DMG)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
        run: npx electron-builder --mac dmg --x64 --arm64 --publish never

      - name: List macOS build folder
        run: ls -la dist-builds

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos
          path: |
            rtx_innovations_electron/dist-builds/*.dmg
            rtx_innovations_electron/dist-builds/mac-*/**/*.dmg
            rtx_innovations_electron/dist-builds/*latest-mac.yml
            rtx_innovations_electron/dist-builds/*.blockmap
          if-no-files-found: error

  create-release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-macos]
    steps:
      - name: Read tag version
        id: tag
        run: echo "tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows
          path: ./release

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos
          path: ./release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: ${{ steps.tag.outputs.tag }} â€” TASK FORCE
          files: |
            release/*.exe
            release/*.dmg
            release/latest.yml
            release/*latest-mac.yml
            release/*.blockmap
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


